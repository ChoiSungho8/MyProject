plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10' //쿼리dsl 관련 설정 추가 3.0 미만
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    // log4j2을 사용할 때 logging이랑 충돌 방지
    all {
        exclude module: 'spring-boot-starter-logging'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'

    // Swagger UI 준비
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    // log4j2, test log4j2 추가
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // security 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    // @Valid를 이용해서 서버에서도 검증한 후에 등록하는 방식을 적용
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Model Mapper 라이브러리 추가
    implementation 'org.modelmapper:modelmapper:3.1.0'

    // Thymeleaf 레이아웃 관련 라이브러리 의존성
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // Spring Boot Devtools 설정
    // 제공하는 대표적인 기능들
    // Automatic Restart : classpath에 있는 파일이 변경될 때마다 애플리케이션을 자동 재시작
    // Live Reload : 정적 자원(html, css, js) 수정 시 새로 고침 없이 바로 적용
    // Property Defaults : Thymeleaf는 기본적으로 성능을 향상시키기 위해 캐싱 기능을 사용
    // 하지만 개발 과정에서는 수정한 소스가 제대로 반영되지 않을 수 있기에 cache의 기본값을 false 지정
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // === QueryDsl 시작 ===

    // == 스프링 부트 3.0 이상 ==
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:" +
            "${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

    // == 스프링 부트 3.0 미만 ==
    /*
    implementation 'com.querydsl:querydsl-jpa'
    annotationProcessor "com.querydsl:querydsl-apt:" +
            "${dependencyManagement.importedProperties['querydsl.version']}:jpa"
            */

    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // === QueryDsl 끝 ===

    // Thymeleaf Layout Dialect 의존성 추가
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

}

tasks.named('test') {
    useJUnitPlatform()
}


// Querydsl 설정부
def generated = 'src/main/generated'

querydsl {
    jpa = true
    querydslSourcesDir = generated
}
sourceSets {
    main.java.srcDir generated
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
//쿼리dsl 관련 설정 추가 3.0 미만
/*
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl { // 실행
    options.annotationProcessorPath = configurations.querydsl
}
*/