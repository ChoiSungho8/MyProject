<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.zerock.shop.controller.ItemControllerTest" tests="2" skipped="0" failures="0" errors="0" timestamp="2023-10-19T15:57:25" hostname="10-5" time="1.747">
  <properties/>
  <testcase name="상품 등록 페이지 일반 회원 접근 테스트" classname="org.zerock.shop.controller.ItemControllerTest" time="0.102"/>
  <testcase name="상품 등록 페이지 권한 테스트" classname="org.zerock.shop.controller.ItemControllerTest" time="1.644"/>
  <system-out><![CDATA[2023-10-20T00:57:21.804+09:00  INFO 1440 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [org.zerock.shop.controller.ItemControllerTest]: ItemControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023-10-20T00:57:21.868+09:00  INFO 1440 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration org.zerock.shop.ShopApplication for test class org.zerock.shop.controller.ItemControllerTest
  _     _      _     _      _     _      _     _      _     _      _     _      _     _      _     _
  (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)
   / ._. \      / ._. \      / ._. \      / ._. \      / ._. \      / ._. \      / ._. \      / ._. \
 __\( Y )/__  __\( Y )/__  __\( Y )/__  __\( Y )/__  __\( Y )/__  __\( Y )/__  __\( Y )/__  __\( Y )/__
(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)
   || C ||      || S ||      || H ||      || C ||      || L ||      || O ||      || U ||      || D ||
 _.' `-' '._  _.' `-' '._  _.' `-' '._  _.' `-' '._  _.' `-' '._  _.' `-' '._  _.' `-' '._  _.' `-' '._
(.-./`-'\.-.)(.-./`-`\.-.)(.-./`-'\.-.)(.-./`-'\.-.)(.-./`-'\.-.)(.-./`-'\.-.)(.-./`-'\.-.)(.-./`-'\.-.)
 `-'     `-'  `-'     `-'  `-'     `-'  `-'     `-'  `-'     `-'  `-'     `-'  `-'     `-'  `-'     `-'
 
Powered by Spring Boot 3.1.3
2023-10-20T00:57:21.950+09:00  INFO 1440 --- [    Test worker] o.z.s.c.ItemControllerTest               : Starting ItemControllerTest using Java 17.0.8 with PID 1440 (started by kkw in D:\workspace\shop)
2023-10-20T00:57:21.951+09:00  INFO 1440 --- [    Test worker] o.z.s.c.ItemControllerTest               : No active profile set, falling back to 1 default profile: "default"
2023-10-20T00:57:22.393+09:00  INFO 1440 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-10-20T00:57:22.451+09:00  INFO 1440 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 57 ms. Found 9 JPA repository interfaces.
2023-10-20T00:57:22.623+09:00  INFO 1440 --- [    Test worker] o.h.j.i.u.LogHelper                      : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-10-20T00:57:22.636+09:00  INFO 1440 --- [    Test worker] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-10-20T00:57:22.636+09:00  INFO 1440 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-10-20T00:57:22.638+09:00  INFO 1440 --- [    Test worker] c.z.h.HikariDataSource                   : HikariPool-2 - Starting...
2023-10-20T00:57:22.929+09:00  INFO 1440 --- [    Test worker] c.z.h.p.HikariPool                       : HikariPool-2 - Added connection conn0: url=jdbc:h2:mem:test user=SA
2023-10-20T00:57:22.930+09:00  INFO 1440 --- [    Test worker] c.z.h.HikariDataSource                   : HikariPool-2 - Start completed.
2023-10-20T00:57:23.060+09:00  INFO 1440 --- [    Test worker] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-10-20T00:57:23.261+09:00  INFO 1440 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Hibernate: 
    create table board (
        bno bigint generated by default as identity,
        reg_time timestamp(6),
        update_time timestamp(6),
        created_by varchar(255),
        modified_by varchar(255),
        content varchar(2000) not null,
        title varchar(500) not null,
        writer varchar(50) not null,
        primary key (bno)
    )
Hibernate: 
    create table cart (
        cart_id bigint not null,
        reg_time timestamp(6),
        update_time timestamp(6),
        created_by varchar(255),
        modified_by varchar(255),
        member_id bigint,
        primary key (cart_id)
    )
Hibernate: 
    create table cart_item (
        cart_item_id bigint not null,
        reg_time timestamp(6),
        update_time timestamp(6),
        created_by varchar(255),
        modified_by varchar(255),
        count integer not null,
        cart_id bigint,
        item_id bigint,
        primary key (cart_item_id)
    )
Hibernate: 
    create table item (
        item_id bigint not null,
        reg_time timestamp(6),
        update_time timestamp(6),
        created_by varchar(255),
        modified_by varchar(255),
        item_detail clob not null,
        item_nm varchar(50) not null,
        item_sell_status varchar(255) check (item_sell_status in ('SELL','SOLD_OUT')),
        price integer not null,
        stock_number integer not null,
        primary key (item_id)
    )
Hibernate: 
    create table item_img (
        item_img_id bigint not null,
        reg_time timestamp(6),
        update_time timestamp(6),
        created_by varchar(255),
        modified_by varchar(255),
        img_name varchar(255),
        img_url varchar(255),
        ori_img_name varchar(255),
        repimg_yn varchar(255),
        item_id bigint,
        primary key (item_img_id)
    )
Hibernate: 
    create table member (
        member_id bigint not null,
        reg_time timestamp(6),
        update_time timestamp(6),
        created_by varchar(255),
        modified_by varchar(255),
        address varchar(255),
        email varchar(255),
        name varchar(255),
        password varchar(255),
        role varchar(255) check (role in ('USER','ADMIN')),
        primary key (member_id)
    )
Hibernate: 
    create table order_item (
        order_item_id bigint not null,
        reg_time timestamp(6),
        update_time timestamp(6),
        created_by varchar(255),
        modified_by varchar(255),
        count integer not null,
        order_price integer not null,
        item_id bigint,
        order_id bigint,
        primary key (order_item_id)
    )
Hibernate: 
    create table orders (
        id bigint not null,
        reg_time timestamp(6),
        update_time timestamp(6),
        created_by varchar(255),
        modified_by varchar(255),
        order_date timestamp(6),
        order_status varchar(255) check (order_status in ('ORDER','CANCEL')),
        member_id bigint,
        primary key (id)
    )
Hibernate: 
    create table reply (
        rno bigint generated by default as identity,
        reg_time timestamp(6),
        update_time timestamp(6),
        created_by varchar(255),
        modified_by varchar(255),
        reply_text varchar(255),
        replyer varchar(255),
        board_bno bigint,
        primary key (rno)
    )
Hibernate: 
    alter table if exists cart 
       drop constraint if exists UK_7dds3r67nkhxm9sbs9r5obd46
Hibernate: 
    alter table if exists cart 
       add constraint UK_7dds3r67nkhxm9sbs9r5obd46 unique (member_id)
Hibernate: 
    alter table if exists member 
       drop constraint if exists UK_mbmcqelty0fbrvxp1q58dn57t
Hibernate: 
    alter table if exists member 
       add constraint UK_mbmcqelty0fbrvxp1q58dn57t unique (email)
Hibernate: 
    create index idx_reply_board_bno 
       on reply (board_bno)
Hibernate: 
    create sequence cart_item_seq start with 1 increment by 50
Hibernate: 
    create sequence cart_seq start with 1 increment by 50
Hibernate: 
    create sequence item_img_seq start with 1 increment by 50
Hibernate: 
    create sequence item_seq start with 1 increment by 50
Hibernate: 
    create sequence member_seq start with 1 increment by 50
Hibernate: 
    create sequence order_item_seq start with 1 increment by 50
Hibernate: 
    create sequence orders_seq start with 1 increment by 50
Hibernate: 
    alter table if exists cart 
       add constraint FKix170nytunweovf2v9137mx2o 
       foreign key (member_id) 
       references member
Hibernate: 
    alter table if exists cart_item 
       add constraint FK1uobyhgl1wvgt1jpccia8xxs3 
       foreign key (cart_id) 
       references cart
Hibernate: 
    alter table if exists cart_item 
       add constraint FKdljf497fwm1f8eb1h8t6n50u9 
       foreign key (item_id) 
       references item
Hibernate: 
    alter table if exists item_img 
       add constraint FKdd5u08y3ap4c46ayrqjf8g88m 
       foreign key (item_id) 
       references item
Hibernate: 
    alter table if exists order_item 
       add constraint FKija6hjjiit8dprnmvtvgdp6ru 
       foreign key (item_id) 
       references item
Hibernate: 
    alter table if exists order_item 
       add constraint FKt4dc2r9nbvbujrljv3e23iibt 
       foreign key (order_id) 
       references orders
Hibernate: 
    alter table if exists orders 
       add constraint FKpktxwhj3x9m4gth5ff6bkqgeb 
       foreign key (member_id) 
       references member
Hibernate: 
    alter table if exists reply 
       add constraint FKr1bmblqir7dalmh47ngwo7mcs 
       foreign key (board_bno) 
       references board
2023-10-20T00:57:23.356+09:00  INFO 1440 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-10-20T00:57:24.839+09:00  INFO 1440 --- [    Test worker] o.s.s.w.DefaultSecurityFilterChain       : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@386b55ce, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@77ed41ab, org.springframework.security.web.context.SecurityContextHolderFilter@559f94b0, org.springframework.security.web.header.HeaderWriterFilter@3173bd63, org.springframework.security.web.csrf.CsrfFilter@7eaf7a70, org.springframework.security.web.authentication.logout.LogoutFilter@695aa5d0, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@918ca32, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50660889, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cfdb324, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@16944bfc, org.springframework.security.web.access.ExceptionTranslationFilter@29d2aeb7, org.springframework.security.web.access.intercept.AuthorizationFilter@4a314af]
2023-10-20T00:57:24.842+09:00  WARN 1440 --- [    Test worker] o.s.s.c.a.w.b.WebSecurity                : You are asking Spring Security to ignore Ant [pattern='/h2-console/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-10-20T00:57:24.842+09:00  INFO 1440 --- [    Test worker] o.s.s.w.DefaultSecurityFilterChain       : Will not secure Ant [pattern='/h2-console/**']
2023-10-20T00:57:24.842+09:00  WARN 1440 --- [    Test worker] o.s.s.c.a.w.b.WebSecurity                : You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-10-20T00:57:24.842+09:00  INFO 1440 --- [    Test worker] o.s.s.w.DefaultSecurityFilterChain       : Will not secure Ant [pattern='/v3/api-docs/**']
2023-10-20T00:57:24.843+09:00  WARN 1440 --- [    Test worker] o.s.s.c.a.w.b.WebSecurity                : You are asking Spring Security to ignore Ant [pattern='/swagger*/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-10-20T00:57:24.844+09:00  INFO 1440 --- [    Test worker] o.s.s.w.DefaultSecurityFilterChain       : Will not secure Ant [pattern='/swagger*/**']
2023-10-20T00:57:24.844+09:00  WARN 1440 --- [    Test worker] o.s.s.c.a.w.b.WebSecurity                : You are asking Spring Security to ignore Ant [pattern='/**', OPTIONS]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-10-20T00:57:24.844+09:00  INFO 1440 --- [    Test worker] o.s.s.w.DefaultSecurityFilterChain       : Will not secure Ant [pattern='/**', OPTIONS]
2023-10-20T00:57:24.844+09:00  WARN 1440 --- [    Test worker] o.s.s.c.a.w.b.WebSecurity                : You are asking Spring Security to ignore Ant [pattern='/swagger-ui.html']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-10-20T00:57:24.845+09:00  INFO 1440 --- [    Test worker] o.s.s.w.DefaultSecurityFilterChain       : Will not secure Ant [pattern='/swagger-ui.html']
2023-10-20T00:57:24.845+09:00  WARN 1440 --- [    Test worker] o.s.s.c.a.w.b.WebSecurity                : You are asking Spring Security to ignore Ant [pattern='/webjars/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-10-20T00:57:24.845+09:00  INFO 1440 --- [    Test worker] o.s.s.w.DefaultSecurityFilterChain       : Will not secure Ant [pattern='/webjars/**']
2023-10-20T00:57:24.846+09:00  WARN 1440 --- [    Test worker] o.s.s.c.a.w.b.WebSecurity                : You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-10-20T00:57:24.846+09:00  INFO 1440 --- [    Test worker] o.s.s.w.DefaultSecurityFilterChain       : Will not secure Ant [pattern='/swagger-resources/**']
2023-10-20T00:57:24.846+09:00  WARN 1440 --- [    Test worker] o.s.s.c.a.w.b.WebSecurity                : You are asking Spring Security to ignore Ant [pattern='/configuration/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-10-20T00:57:24.846+09:00  INFO 1440 --- [    Test worker] o.s.s.w.DefaultSecurityFilterChain       : Will not secure Ant [pattern='/configuration/**']
2023-10-20T00:57:24.847+09:00  WARN 1440 --- [    Test worker] o.s.s.c.a.w.b.WebSecurity                : You are asking Spring Security to ignore Ant [pattern='/replies/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-10-20T00:57:24.848+09:00  INFO 1440 --- [    Test worker] o.s.s.w.DefaultSecurityFilterChain       : Will not secure Ant [pattern='/replies/**']
2023-10-20T00:57:24.848+09:00  WARN 1440 --- [    Test worker] o.s.s.c.a.w.b.WebSecurity                : You are asking Spring Security to ignore Ant [pattern='/css/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-10-20T00:57:24.848+09:00  INFO 1440 --- [    Test worker] o.s.s.w.DefaultSecurityFilterChain       : Will not secure Ant [pattern='/css/**']
2023-10-20T00:57:24.848+09:00  WARN 1440 --- [    Test worker] o.s.s.c.a.w.b.WebSecurity                : You are asking Spring Security to ignore Ant [pattern='/js/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-10-20T00:57:24.848+09:00  INFO 1440 --- [    Test worker] o.s.s.w.DefaultSecurityFilterChain       : Will not secure Ant [pattern='/js/**']
2023-10-20T00:57:24.848+09:00  WARN 1440 --- [    Test worker] o.s.s.c.a.w.b.WebSecurity                : You are asking Spring Security to ignore Ant [pattern='/images/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-10-20T00:57:24.849+09:00  INFO 1440 --- [    Test worker] o.s.s.w.DefaultSecurityFilterChain       : Will not secure Ant [pattern='/images/**']
2023-10-20T00:57:24.849+09:00  WARN 1440 --- [    Test worker] o.s.s.c.a.w.b.WebSecurity                : You are asking Spring Security to ignore Ant [pattern='/img/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-10-20T00:57:24.849+09:00  INFO 1440 --- [    Test worker] o.s.s.w.DefaultSecurityFilterChain       : Will not secure Ant [pattern='/img/**']
2023-10-20T00:57:25.042+09:00  INFO 1440 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-10-20T00:57:25.042+09:00  INFO 1440 --- [    Test worker] o.s.t.w.s.TestDispatcherServlet          : Initializing Servlet ''
2023-10-20T00:57:25.044+09:00  INFO 1440 --- [    Test worker] o.s.t.w.s.TestDispatcherServlet          : Completed initialization in 2 ms
2023-10-20T00:57:25.064+09:00  INFO 1440 --- [    Test worker] o.z.s.c.ItemControllerTest               : Started ItemControllerTest in 3.182 seconds (process running for 21.987)

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /admin/item/new
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {SPRING_SECURITY_CONTEXT=SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=user, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]]}

Handler:
             Type = null

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 403
    Error message = Forbidden
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2023-10-20T00:57:26.531+09:00  WARN 1440 --- [    Test worker] n.n.u.t.l.f.FragmentProcessor            : You don't need to put the layout:fragment/data-layout-fragment attribute into the <head> section - the decoration process will automatically copy the <head> section of your content templates into your layout page.

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /admin/item/new
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository.CSRF_TOKEN=org.springframework.security.web.csrf.DefaultCsrfToken@4f95e256, SPRING_SECURITY_CONTEXT=SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, credentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]]}

Handler:
             Type = org.zerock.shop.controller.ItemController
           Method = org.zerock.shop.controller.ItemController#itemForm(Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = item/itemForm
             View = null
        Attribute = itemFormDto
            value = org.zerock.shop.dto.ItemFormDto@48d46402
           errors = []

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html>
<!-- layout 기능을 사용하기 위해 layout 네임스페이스 추가 -->
<head>
    
    <title> 투어리스트인투어 </title>
    <meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1">
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="../../css/swiper.min.css">
    <link rel="stylesheet" href="../../css/common.css">
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="../../js/jquery-1.11.3.min.js"></script>
    <script src="../../js/rollmain.js"></script>
    <script src="../../js/jquery.easing.js"></script>
    <script src="../../js/common.js"></script>
    <script src="../../js/jquery.smooth-scroll.min.js"></script>
    <!--[if lte IE 9]>-->
    <!--<script src="../../js/html5shiv.js"></script>
    <script src="../../js/placeholders.min.js"></script>-->
    <!--<![endif]-->

    <!--CSS only-->
    <!--<link th:href="@{/css/layout1.css}" rel="stylesheet">-->

    <!-- JS, Popper.js, and jQuery -->

    

    <script>
        $(document).ready(function() {
            // 상품 등록 시 실패 메시지를 받아서 상품 등록 페이지에 재진입 시 alert를 통해서 실패 사유를 보여줍니다.
            var errorMessage = null;
            if (errorMessage != null) {
                alert(errorMessage)
            }
            bindDomEvent();
        });

        function bindDomEvent() {
            $(".custom-file-input").on("change", function() {
                var fileName = $(this).val().split("\\").pop(); // 이미지 파일명
                var fileExt = fileName.substring(fileName.lastIndexOf(".") +1);
                // 확장자 추출
                fileExt = fileExt.toLowerCase(); // 소문자 변환

                // 파일 첨부 시 이미지 파일인지 검사를 합니다.
                if (fileExt != "jpg" && fileExt != "jpeg" && fileExt != "gif" && fileExt != "png" && fileExt != "bmp"){
                    alert("이미지 파일만 등록이 가능합니다.");
                    return;
                }

                // lable 태그 안의 내용을 jquery의 .html()을 이용하여 파일명을 입력해줍니다.
                $(this).siblings(".custom-file-label").html(fileName);

            });
        }
    </script>


    
    <style>
        .input-group {
            margin-bottom : 15px
        }
        .img-div {
            margin-bottom : 10px
        }
        .fieldError {
            color : #bd2130;
        }
    </style>


</head>
<body>
<ul class="skipnavi">
    <li><a href="#container">본문내용</a></li>
</ul>
<!-- wrap -->
<div id="wrap">

    <!-- replace : 해당 속성이 선언된 html 태그를 다른 html 파일로 치환 -->
    <!-- fragments 폴더 아래 header.html 파일의 th:fragment=header 영역을 가지고 옴 -->
    <div>
    <header id="header">
        <div class="header_area box_inner clear">
            <h1><a href="/">Tourist in tour</a></h1>
            <p class="openMOgnb"><a href="#"><b class="hdd">메뉴열기</b> <span></span><span></span><span></span></a></p>
            <!-- header_cont -->
            <div class="header_cont">
                <ul class="util clear">
                    <!-- 로그인하지 않은 상태이면 로그인 메뉴를 보여줌 -->
                    
                    <!-- 로그인한 상태이면 로그아웃 메뉴를 보여줌 -->
                    <li>
                        <a href="/member/logout">로그아웃</a>
                    </li>
                    <li><a href="/member/new">회원가입</a></li>
                </ul>
                <nav>
                    <ul class="gnb clear">
                        <!-- 관리자 계정(ADMIN ROLE)으로 로그인한 경우 상품 등록, 상품 관리 메뉴를 보여줌 -->
                        <li class="nav-item">
                            <a class="nav-link" href="/admin/item/new">상품 등록</a>
                        </li>
                        <!-- 관리자 계정(ADMIN ROLE)으로 로그인한 경우 상품 등록, 상품 관리 메뉴를 보여줌 -->
                        <li class="nav-item">
                            <a class="nav-link" href="/admin/items">상품 관리</a>
                        </li>
                        <li>
                            <a href="javascript:;" class="openAll1">베스트</a>
                        </li>
                        <li>
                            <a href="/board/list" class="openAll3">게시판</a>
                        </li>
                        <!-- 로그인(인증, 회원만) 했을 경우에만 보여줌 -->
                        
                        <!-- 로그인(인증, 회원만) 했을 경우에만 보여줌 -->
                        
                        <div>
                            <form class="form-inline my-2 my-lg-0" action="/" method="get">
                                <input name="searchQuery" class="form-control mr-sm-2" type="search"
                                       placeholder="Search" aria-label="Search">
                                <button class="btn btn-outline-success my-2 my-sm-0" type="submit">
                                    Search
                                </button>
                            </form>
                        </div>
                    </ul>
                </nav>
                <p class="closePop"><a href="javascript:;">닫기</a></p>
            </div>
            <!-- //header_cont -->
        </div>
    </header>
</div>

    <div id="container">
        <div class="main_rolling_pc">
            <div class="visualRoll">
                <ul class="viewImgList">
                    <li class="imglist0">
                    </li>
                    <li class="imglist1">
                    </li>
                    <li class="imglist2">
                    </li>
                </ul>

                <div class="rollbtnArea">
                    <ul class="rollingbtn">
                        <li class="seq butt0"><a href="#butt"><img src="../../img/btn_rollbutt_on.png" alt="1번" /></a></li>
                        <li class="seq butt1"><a href="#butt"><img src="../../img/btn_rollbutt_off.png" alt="2번" /></a></li>
                        <li class="seq butt2"><a href="#butt"><img src="../../img/btn_rollbutt_off.png" alt="3번" /></a></li>
                        <li class="rollstop"><a href="#" class="stop"><img src="../../img/btn_roll_stop.png" alt="멈춤" /></a></li>
                        <li class="rollplay"><a href="#" class="play"><img src="../../img/btn_roll_play.png" alt="재생" /></a></li>
                    </ul>
                </div><!-- //rollbtnArea -->

            </div><!-- //visualRoll -->
        </div><!-- //main_rolling_pc -->

        <div class="main_rolling_mobile">
            <div class="swiper-container">
                <div class="swiper-wrapper">
                    <div class="swiper-slide">
                        <a href="javascript:;"><img src="../../img/foodbanner_one.jpg" alt="" /></a>
                    </div>
                    <div class="swiper-slide">
                        <a href="javascript:;"><img src="../../img/foodbanner_two.png" alt="" /></a>
                    </div>
                    <div class="swiper-slide">
                        <a href="javascript:;"><img src="../../img/foodbanner_three.jpg" alt="" /></a>
                    </div>
                </div>
                <div class="swiper-pagination"></div>
                <!-- <div class="swiper-button-next"></div>
                <div class="swiper-button-prev"></div> -->

            </div><!--//swiper-container-->
        </div><!--//main_rolling_mobile -->

        <!-- layout에서 변경되는 영역을 fragment로 설정 -->
        <div class="content">

    <form role="form" method="post" enctype="multipart/form-data">

        <p class="h2">
            상품 등록
        </p>

        <input type="hidden" id="id" name="id" value="">

        <div class="form-group">
            <select class="custom-select" id="itemSellStatus" name="itemSellStatus">
                <option value="SELL">판매중</option>
                <option value="SOLD_OUT">품절</option>
            </select>
        </div>

        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text">상품명</span>
            </div>
            <input type="text" class="form-control" placeholder="상품명을 입력해주세요" id="itemNm" name="itemNm" value="">
        </div>
        

        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text">가격</span>
            </div>
            <input type="number" class="form-control" placeholder="상품의 가격을 입력해주세요" id="price" name="price" value="">
        </div>
        

        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text">재고</span>
            </div>
            <input type="number" class="form-control" placeholder="상품의 재고를 입력해주세요" id="stockNumber" name="stockNumber" value="">
        </div>
        

        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text">상품 상세 내용</span>
            </div>
            <textarea class="form-control" aria-label="With textarea" id="itemDetail" name="itemDetail"></textarea>
        </div>
        

        <!-- 상품 이미지 정보를 담고 있는 리스트가 비어 있다면 상품을 등록하는 경우입니다. -->
        <div>
            <!-- 상품 등록 시 이미지의 개수를 최대 5개로 함, num에는 1부터 5까지 숫자가 할당 -->
            <div class="form-group">
                <div class="custom-file img-div">
                    <input type="file" class="custom-file-input" name="itemImgFile"/>
                    <!-- label 태그에는 몇 번째 상품 이미지인지 표시를 합니다. -->
                    <label class="custom-file-label">상품이미지1</label>
                </div>
            </div>
            <div class="form-group">
                <div class="custom-file img-div">
                    <input type="file" class="custom-file-input" name="itemImgFile"/>
                    <!-- label 태그에는 몇 번째 상품 이미지인지 표시를 합니다. -->
                    <label class="custom-file-label">상품이미지2</label>
                </div>
            </div>
            <div class="form-group">
                <div class="custom-file img-div">
                    <input type="file" class="custom-file-input" name="itemImgFile"/>
                    <!-- label 태그에는 몇 번째 상품 이미지인지 표시를 합니다. -->
                    <label class="custom-file-label">상품이미지3</label>
                </div>
            </div>
            <div class="form-group">
                <div class="custom-file img-div">
                    <input type="file" class="custom-file-input" name="itemImgFile"/>
                    <!-- label 태그에는 몇 번째 상품 이미지인지 표시를 합니다. -->
                    <label class="custom-file-label">상품이미지4</label>
                </div>
            </div>
            <div class="form-group">
                <div class="custom-file img-div">
                    <input type="file" class="custom-file-input" name="itemImgFile"/>
                    <!-- label 태그에는 몇 번째 상품 이미지인지 표시를 합니다. -->
                    <label class="custom-file-label">상품이미지5</label>
                </div>
            </div>
        </div>

        <!-- 상품 이미지 정보를 담고 있는 리스트가 비어 있지 않다면 상품을 수정하는 경우입니다. -->
        

        <!-- 상품 아이디가 없는 경우(상품을 처음 등록할 경우) 저장 로직을 호출하는 버튼을 보여줌 -->
        <div style="text-align: center">
            <button formaction="/admin/item/new" type="submit" class="btn btn-primary">저장</button>
        </div>
        <!-- 상품의 아이디가 있는 경우 수정 로직을 호출하는 버튼을 보여줌 -->
        
        <input type="hidden" name="_csrf" value="YEfvxxqvId29jw3iq3Tgwt_rPJsRkdcY2tbLgDoAfdrCWf2cBnaKoirLR--Q6WyHmlnU9rrdEaIkpO417rWusV4xH-n3YJyr"/>

    </form>
</div>

    </div>
    <!-- //container -->

    <div class="footer">
    <footer>
        <div class="foot_area box_inner">
            <ul class="foot_list clear">
                <li><a href="javascript:;">이용약관</a></li>
                <li><a href="javascript:;">개인정보취급방침</a></li>
            </ul>
            <h2>투어리스트인투어</h2>
            <p class="addr">서울특별시 종로구 혜화동 9길 청운빌딩 5층 <span class="gubun">/</span>
                <span class="br_line">대표전화 <span class="space0">02-1234-5678</span> <span class="gubun">/</span>
					<span class="br_line">E-mail : <span class="space0"> titour@touristintour.com</span></span>
				</span>
            </p>
            <p class="copy box_inner">Copyright(c) TouristInTour all right reserved</p>
            <ul class="snslink clear">
                <li><a href="javascript:;">blog</a></li>
                <li><a href="javascript:;">facebook</a></li>
                <li><a href="javascript:;">instargram</a></li>
            </ul>
        </div>
    </footer>
</div>

</div>
<!-- //wrap -->

<h2 class="hdd">빠른 링크 : 전화 문의,카카오톡,오시는 길,꼭대기로</h2>
<div class="quick_area">
    <ul class="quick_list">
        <li><a href="tel:010-7184-4403"><h3>전화 문의</h3><p>010-1234-5678</p></a></li>
        <li><a href="javascript:;"><h3>카카오톡 <em>상담</em></h3><p>1:1상담</p></a></li>
        <li><a href="javascript:;"><h3 class="to_contact">오시는 길</h3></a></li>
    </ul>
    <p class="to_top"><a href="#layout0" class="s_point">TOP</a></p>
</div>

<script type="text/javascript" src="../../js/swiper.min.js"></script>
<script type="text/javascript">
    $(document).ready(function(){
        var swiper = new Swiper('.swiper-container', {
            loop: true,
            autoplay:5500,
            autoplayDisableOnInteraction: false,
            pagination: '.swiper-pagination',
            paginationClickable: true
        });
    });
</script>

</body>
</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
